#!/usr/bin/env python3
from datetime import datetime, timedelta

# Colors
YELLOW = "\033[33;1m"
GREEN = "\033[32m"   # Lab
CYAN = "\033[36m"    # Theory
RESET = "\033[0m"

# Timetable data
timetable = {
    "Monday": [
        ("1:30-3:30", "OS Theory (ECR-110, PC-209)"),
        ("3:30-5:30", "Principles of Management (ECR-110, AEC-211)")
    ],
    "Tuesday": [
        ("1:30-2:30", "DBMS (ECR-110, PC-203)"),
        ("2:30-3:30", "OS Theory (ECR-110, PC-209)"),
        ("3:30-5:30", "Comp Org and Arch (ECR-110, PC-201)")
    ],
    "Wednesday": [
        ("9:00-11:00", "DBMS Lab (PC-251) ETL312"),
        ("11:00-1:00", "DAA Lab (PC-255) ETL313"),
        ("1:30-3:30", "DBMS (ECR-110, PC-203)"),
        ("3:30-5:30", "Java Theory (ECR-110, PC-205)")
    ],
    "Thursday": [
        ("1:30-3:30", "DAA Theory (ECR-110, PC-207)"),
        ("3:30-5:30", "COA Theory (ECR-110, PC-207)")
    ],
    "Friday": [
        ("9:00-11:00", "Java Lab (PC-253) DTL219"),
        ("11:00-1:00", "OS Lab (PC-257) DTL217"),
        ("1:30-3:30", "DAA Theory (ECR-110, PC-207)"),
        ("3:30-5:30", "Java Theory (ECR-110, PC-205)")
    ]
}

# Color subject by type
def color_subject(text):
    if "Lab" in text:
        return f"{GREEN}{text}{RESET}"
    else:
        return f"{CYAN}{text}{RESET}"

# Get day with offset
def get_day(offset=1):
    target_date = datetime.now() + timedelta(days=offset)
    return target_date.strftime("%A")

# Print timetable for given day
def print_timetable(day):
    print(f"{YELLOW}====== {day} ======{RESET}")
    if day in timetable:
        max_time_len = max(len(slot[0]) for slot in timetable[day])
        for time, subject in timetable[day]:
            print(f"{time.ljust(max_time_len)}   {color_subject(subject)}")
    else:
        print("No classes today 🎉")

# Main
if __name__ == "__main__":
    import sys
    offset = int(sys.argv[1]) if len(sys.argv) > 1 else 1
    day = get_day(offset)
    print_timetable(day)
