#!/usr/bin/env bash

dotfiles_dir="/home/sahaj/LinuxBackup/dotfiles/"
data_dir="/media/data/Linux_Backup/dotfiles/"

# --- helpers ---

GREEN='\e[32m'
RED='\e[31m'
YELLOW='\e[33m'
RESET='\e[0m'
success() {
  echo -e "${GREEN}$1$RESET"
}
error() {
  echo -e "${RED}$1$RESET"
}
warn() {
  echo -e "${YELLOW}$1$RESET"
}

spinner() {
  tput civis
  trap 'tput cnorm; exit' INT TERM EXIT
  local frames=("⣾" "⣽" "⣻" "⢿" "⡿" "⣟" "⣯" "⣷")
  local i=0
  while true; do
    printf "\r%s" ${frames[$i]}
    i=$(((i + 1) % ${#frames[@]}))
    sleep 0.1
  done
}

spinnerRun() {
  local cmd="$*"
  spinner &
  local spinPid=$!
  trap "kill $spinPid 2>/dev/null; tput cnorm" INT TERM EXIT
  eval "$cmd"
  kill $spinPid 2>/dev/null
  wait $spinPid 2>/dev/null
  tput cnorm
  trap - INT TERM EXIT
  printf "\r" # clear spinner
}

# --- main script ---

cd "${dotfiles_dir}" || {
  echo "Couldn't cd into ${dotfiles_dir}"
  exit 1
}
git add . && git commit -m "Updated"
git pull origin main --rebase || exit
echo "  Cleaning up $dotfiles_dir"
spinnerRun git rm -rf . >/dev/null

dotfiles=(
  "/etc/keyd/default.conf"
  "/etc/tlp.conf"
  "/etc/auto-cpufreq.conf"
  "/etc/systemd/system/powermgmt.service"
  "/etc/systemd/system/fix-mic.service"
  # "/etc/udev/rules.d/90-power.rules"
  "$HOME/scripts/"
  "$HOME/.gitconfig"
  "$HOME/.zshrc"
  "$HOME/.zprofile"
  "$HOME/.config/hypr/"
  "$HOME/.config/swaylock/config"
  "$HOME/.config/waybar/"
  "$HOME/.config/dunst/"
  "$HOME/.config/wofi/"
  "$HOME/.config/nvim/"
  "$HOME/.config/yay/config.json"
  "$HOME/.config/gtk-3.0/"
  "$HOME/.config/gtk-4.0/"
  "$HOME/.config/easyeffects/"
  # "$HOME/.config/alacritty/alacritty.toml"
  "$HOME/.config/dconf/"
  "$HOME/.config/tmux/tmux.conf"
  "$HOME/.config/foot/"
  "$HOME/.config/starship/"
  "$HOME/.config/btop/"
  "$HOME/.config/mimeapps.list"
  "$HOME/wallpapers/"
  "$HOME/.config/mods/"
  "$HOME/.config/mcphub/"
)

function push() {
  success "Uploading $1 to Github"
  git add .
  if git diff --staged --quiet; then
    echo "No changes to commit."
    return 0
  fi
  git commit -m "Updated" || {
    echo "${RED}Git commit failed!$RESET"
    exit 1
  }
  git push -u origin main
}

function copyDots() {
  mkdir -p "$1"
  for item in "${dotfiles[@]}"; do
    if [ -e "$item" ]; then
      relative_path="${item#~/}"
      if [[ $item == /etc/* ]]; then
        relative_path="${item#/}"
      fi
      destination_dir=$(dirname "$1$relative_path")
      mkdir -p "$destination_dir"
      if ! cp -r "$item" "$destination_dir"; then
        echo -e "${RED}ERROR: couldn't copy $item.$RESET"
      # else
      #   echo -e "Copied: $item to $destination_dir"
      fi
    else
      echo -e "${RED}ERROR: $item does not exist.$RESET"
    fi
    sleep 0.2
  done
}

echo "  Copying dotfiles to $dotfiles_dir"
spinnerRun copyDots "$dotfiles_dir"

if [[ $1 != "cp" ]]; then
  push $dotfiles_dir
fi

if [ -w "$data_dir" ]; then
  rm -rf "$data_dir" || exit
  echo "  Copying dotfiles to $data_dir"
  spinnerRun copyDots "$data_dir"
else
  echo -e "${YELLOW}Skipping $data_dir $RESET"
  exit 1
fi

cd - || exit
